<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
	xmlns:mx="library://ns.adobe.com/flex/mx" width="400" height="496"
	applicationComplete="initApplication()">
	<fx:Script>
		<![CDATA[
			import flash.desktop.NativeApplication;
			import logmeister.LogMeister;
			import logmeister.connectors.TrazzleConnector;

			import nl.base42.plow.data.DataManager;
			import nl.base42.plow.data.dvo.BlueprintData;
			import nl.base42.plow.ui.BlueprintForm;
			import nl.base42.plow.ui.ColumnOptions;

			import com.greensock.TweenLite;

			import mx.collections.ArrayCollection;

			import flash.display.NativeMenu;
			import flash.display.NativeMenuItem;
			import flash.events.Event;
			import flash.events.MouseEvent;

			private static const OPEN_WIDTH : uint = 755;
			//
			private var _form : BlueprintForm;
			private var _logwindow : LogWindow;

			private function initApplication() : void {
				
				LogMeister.addLogger(new TrazzleConnector(stage, "Plow"));
				addEventListener(Event.CLOSING, handleQuit);
				error("init plow");

				templateDataGrid.addEventListener(MouseEvent.CLICK, handleMouseClickList);

				DataManager.getInstance();
				DataManager.getInstance().addEventListener(Event.CHANGE, handleModelChanges);

				_form = new BlueprintForm();
				_form.addEventListener(Event.CHANGE, handleHandleChange);
				_form.x = 417;
				_form.y = 47;
				addElement(_form);
				
				_logwindow = new LogWindow();

				var mainmenu : NativeMenu = nativeApplication.menu;
				var filemenu : NativeMenuItem = mainmenu.getItemAt(0);

				var logmenu : NativeMenuItem = filemenu.submenu.addItemAt(new NativeMenuItem("Show log"), 0);
				logmenu.addEventListener(Event.SELECT, handleShowLog);
			}

			private function handleHandleChange(event : Event) : void {
				templateDataGrid.selectedIndex = -1;
				_form.clear();
			}

			private function handleShowLog(event : Event) : void {
				_logwindow.open();
			}

			private function handleMouseClickList(event : MouseEvent) : void {
				if(!templateDataGrid.selectedItem) return;
				
				var id : int = templateDataGrid.selectedItem.id;

				if (event.target is Button) {
					if (Button(event.target).id == ColumnOptions.DELETE_BUTTON_ID) {
						DataManager.getInstance().removeItemByID(id);
						return;
					}
				}

				var selectedItem : BlueprintData = DataManager.getInstance().getItemByID(id);
				if (selectedItem) {
					TweenLite.to(this, 0.4, {width:OPEN_WIDTH});
					_form.selectItem(selectedItem);
				} else {
					error("selectItem: invalid item selected");
				}
			}

			private function handleModelChanges(event : Event) : void {
				var dp : ArrayCollection = DataManager.getInstance().getDataProvider();
				templateDataGrid.dataProvider = dp;
			}

			private function handleQuit(event : Event) : void {
				// save?
			}

			private function handleClickAddTemplate(event : MouseEvent) : void {
				DataManager.getInstance().addFolderAsTemplate();
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<mx:DataGrid x="28" y="47" width="349" height="364" id="templateDataGrid">
		<mx:columns>
			<mx:DataGridColumn width="120" headerText="Name"
				dataField="name"/>
			<mx:DataGridColumn headerText="Folder" dataField="path"/>
			<mx:DataGridColumn itemRenderer="nl.base42.plow.ui.ColumnOptions"
				width="80" resizable="false" sortable="false"/>
		</mx:columns>
	</mx:DataGrid>
	<s:Button x="138" y="425" label="Select new blueprint" width="132"
		height="30" click="handleClickAddTemplate(event);"/>
	<s:Label x="28" y="27" text="Blueprints"/>
	<s:Label x="418" y="27" text="Settings"/>
	
</s:WindowedApplication>
